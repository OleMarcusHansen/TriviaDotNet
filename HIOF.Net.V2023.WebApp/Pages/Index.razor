@page "/"
@using HIOF.Net.V2023.WebApp.Model.V1;
@inject NavigationManager NavManager
@inject IJSRuntime JSRuntime;

<PageTitle>Index</PageTitle>

<h1 class="headerName">Register</h1>

<form>
    <div class="form-group">
        <label for="username">Username</label>
        <input type="text" id="username" class="form-control" @bind="@username" />
    </div>
    <div class="form-group">
        <label for="email">Email</label>
        <input type="email" id="email" class="form-control" @bind="@email" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <input type="password" id="password" class="form-control" @bind="@password" />
    </div>
    <button type="submit" class="btn btn-primary" @onclick="registerUser">Register</button>
</form>


<h1 class="headerName">Log in</h1>
<form>
    <div class="form-group">
        <label for="logInUsername">Username</label>
        <input type="text" id="logInUsername" class="form-control" @bind="@logInUsername" />
    </div>
    <div class="form-group">
        <label for="logInPassword">Password</label>
        <input type="logInPassword" id="logInPassword" class="form-control" @bind="@logInPassword" />
    </div>
    <button type="submit" class="btn btn-primary" @onclick="Login">Login</button>
</form>
<p>@logInFromUser</p>


@code {
    private string email { get; set; }
    private string username { get; set; }
    private string password { get; set; }
    private string logInUsername { get; set; }
    private string logInPassword { get; set; }
    private string logInFromUser { get; set; }
    //https://localhost:7136/api/1.0/login/register?email={email}&username={username}&password={password};
    //https://localhost:7136/api/1.0/login/login?username={username}&password={}
    //https://localhost:7136/api/1.0/login/verify?username={username}&token={password}
    private void registerUser()
    {
        var url = $"https://localhost:7136/api/1.0/login/register?email={email}&username={username}&password={password}";
        using var client = new HttpClient();
        var register = client.PostAsync(url, null).Result;
    }

    async void setUser()
    {

    }

    private void Login()
    {
        var url = $"https://localhost:7136/api/1.0/login/login?username={logInUsername}&password={logInPassword}";
        using var client = new HttpClient();
        var login = client.PostAsync(url, null).Result;
        var result = login.Content.ReadFromJsonAsync<UserToken>().Result;
        var token = result.Token;
        var id = result.Id;

        if (token != null)
        {
            
            //JSRuntime.InvokeVoidAsync("alert", null);
            JSRuntime.InvokeVoidAsync("sessionStorage.setItem", "token", token);
            JSRuntime.InvokeVoidAsync("sessionStorage.setItem", "id", id);
            //retrievedData = JSRuntime.InvokeAsync<string>("sessionStorage.getItem", "myKey");
            logInFromUser = "logg inn vellykket!";
            NavManager.NavigateTo("/quiz");
            // Login succeeded
            // Perform necessary actions (e.g., store token, navigate to another page)
        }
        else
        {
            // Login failed
            // Handle the error (e.g., display error message)
        }
    }
}
